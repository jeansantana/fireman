/*
 * exploitElement.h
 *
 *  Created on: 08/03/2015
 *      Author: Jean Silva
 */

#ifndef EXPLOITELEMENT_H_
#define EXPLOITELEMENT_H_

#include "point.h"

class exploitElement {
	bool left;
	bool right;
	bool up;
	bool down;
public:
	exploitElement() {
		left = right = up = down = false;
	}

	virtual ~exploitElement() {

	}

	bool isDown() const {
		return down;
	}

	void setDown(bool down) {
		this->down = down;
	}

	bool isLeft() const {
		return left;
	}

	void setLeft(bool left) {
		this->left = left;
	}

	bool isRight() const {
		return right;
	}

	void setRight(bool right) {
		this->right = right;
	}

	bool isUp() const {
		return up;
	}

	void setUp(bool up) {
		this->up = up;
	}

	bool doVisit(direction dir) {
		if (!directionWasVisited(dir)) {
			if (dir == UP) {
				up = true;
			} else if (dir == DOWN) {
				down = true;
			} else if (dir == LEFT) {
				left = true;
			} else if (dir == RIGHT) {
				right = true;
			}
		} else {
			return false;
		}
		return true;
	}

	bool directionWasVisited(direction dir) {
		bool wasVisited = false;

		if (dir == UP) {
			wasVisited = up;
		} else if (dir == DOWN) {
			wasVisited = down;
		} else if (dir == LEFT) {
			wasVisited = left;
		} else if (dir == RIGHT) {
			wasVisited = right;
		}

		return wasVisited;
	}

	bool allWasVisited() {
		return up && down && left && right;
	}
};

#endif /* EXPLOITELEMENT_H_ */
